openapi: '3.0.0'
info:
  title: Vault HTTP API
  description: |
    Storing, retrieving, and managing sensitive data within a VGS organization.

    **NOTE:** _The Vault API is intended only for environments that are already PCI-compliant.
    If you want to use this API, but are not yet PCI-compliant, you can
    use [VGS Collect](https://www.verygoodsecurity.com/docs/vgs-collect/what-is-it) or
    VGS Proxy with [Inbound Routes](https://www.verygoodsecurity.com/docs/getting-started/quick-integration#securing-inbound-connection)
    to quickly and seamlessly achieve compliance._

    Looking for the old version of the API? Find it
    [here](https://www.verygoodsecurity.com/docs/api/1/vault).

    # Introduction

    Each encrypted value stored in a VGS vault has one or multiple _aliases_
    associated with it. These aliases are fully opaque and retain no information
    about the underlying data. The user may safely store aliases without
    compromising data security.

    **NOTE:** The API works with persistent storage only. Unlike volatile
    storage, this means that the data is stored permanently, without any
    implicit TTL.

    Aliases are not valuable on their own. However, they can be used to decrypt
    the associated value and pass it to another service via the
    [forward proxy](https://www.verygoodsecurity.com/docs/guides/outbound-connection).

    ## Alias Formats

    Each alias corresponds to a certain format. There are several alias formats
    suitable for different kinds of sensitive data.

    For example, `UUID` produces a random Base58-encoded UUID string with an
    environment-dependent prefix:

    ```
    tok_sandbox_bhtsCwFUzoJMw9rWUfEV5e
    ```

    This format is generic and suitable for any kind of data.

    The tables below contain descriptions of all alias formats recognized by the
    API.

    ### Generic Formats

    | Value                   | Description                                           |
    |-------------------------|-------------------------------------------------------|
    | `NUM_LENGTH_PRESERVING` | Length-Preserving, Numeric                            |
    | `RAW_UUID`              | UUID                                                  |
    | `UUID`                  | UUID (Prefixed, Base58-Encoded)                       |
    | `GENERIC_T_FOUR`        | UUID (Prefixed, Base58-Encoded, Last four preserving) |

    ### Account Number Formats

    | Value                             | Description                          |
    |-----------------------------------|--------------------------------------|
    | `FPE_ACC_NUM_T_FOUR`              | Length-Preserving, Numeric (A4)      |
    | `FPE_ALPHANUMERIC_ACC_NUM_T_FOUR` | Length-Preserving, Alphanumeric (A4) |


    ### Payment Card Formats

    | Value            | Description                                 |
    |------------------|---------------------------------------------|
    | `FPE_SIX_T_FOUR` | Format-Preserving, Luhn Valid (6T4)         |
    | `FPE_T_FOUR`     | Format-Preserving, Luhn Valid (T4)          |
    | `PFPT`           | Prefixed, Luhn Valid, 19-Digit Fixed Length |

    ### SSN Formats

    | Value            | Description            |
    |------------------|------------------------|
    | `FPE_SSN_T_FOUR` | Format-Preserving (A4) |

    # Authentication

    This API uses `Basic` authentication.

    Credentials to access the API can be generated on the
    [dashboard](https://dashboard.verygoodsecurity.com) by going to the Settings
    section of the vault of your choosing.

    [Docs » Guides » Access credentials](https://www.verygoodsecurity.com/docs/settings/access-credentials)

    # Rate Limiting

    The API allows up to 3,000 requests per minute. Requests are associated with
    the vault, regardless of the access credentials used to authenticate the
    request.

    Your current rate limit is included as HTTP headers in every API response:

    | Header Name             | Description                                              |
    |-------------------------|----------------------------------------------------------|
    | `x-ratelimit-remaining` | The number of requests remaining in the 1-minute window. |

    If you exceed the rate limit, the API will reject the request with HTTP
    [429 Too Many Requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429).

    # Errors

    The API uses standard HTTP status codes to indicate whether the request
    succeeded or not.

    In case of failure, the response body will be JSON in a predefined format.
    For example, trying to create too many aliases at once results in the
    following response:

    ```json
    {
        "errors": [
            {
                "status": 400,
                "title": "Bad request",
                "detail": "Too many values (limit: 20)",
                "href": "https://api.sandbox.verygoodvault.com/aliases"
            }
        ]
    }
    ```
  version: '1.0.0'
  contact:
    email: support@verygoodsecurity.com
  x-logo:
    url: images/vgs-logo.png
    href: https://www.verygoodsecurity.com
    altText: VGS Logo

externalDocs:
  description: Find out more about VGS
  url: https://www.verygoodsecurity.com/

servers:
  - url: https://api.sandbox.verygoodvault.com
    description: Sandbox

  - url: https://api.live.verygoodvault.com
    description: Live

tags:
  - name: aliases
    x-displayName: Aliases
    description: |
      Unique IDs that retain all the essential information about the data
      without compromising its security.

x-tagGroups:
  - name: Data Management
    tags:
      - aliases

security:
  - basicAuth: []

paths:
  /aliases:
    post:
      operationId: createAliases
      tags:
        - aliases
      summary: Create aliases
      description: |
        Stores multiple values at once & returns their aliases.

        Alternatively, this endpoint may be used to associate additional (i.e.
        secondary) aliases with the same underlying data as the reference
        alias specified in the request body.

        **NOTE:** You cannot reference the same alias more than once in a
        single request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAliasesRequest'
            examples:
              A:
                summary: Create a new alias
                value:
                  data:
                    - value: 122105155
                      classifiers: bank-account
                      format: UUID
              B:
                summary: Reference an existing alias
                value:
                  data:
                    - alias: tok_sandbox_bhtsCwFUzoJMw9rWUfEV5e
                      format: RAW_UUID
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RevealedData'
                    description: List of stored values along with their aliases.
        default:
          $ref: '#/components/responses/ApiErrorsResponse'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl https://api.sandbox.verygoodvault.com/aliases \
             -X POST \
             -u "$USERNAME:$PASSWORD" \
             -H 'Content-Type: application/json' \
             -d '{
                "data": [
                {
                  "value": "test@example.com",
                  "classifiers": [
                    "email_address"
                  ],
                  "format": "UUID"
                }
                ]
              }'

    get:
      operationId: revealMultipleAliases
      tags:
        - aliases
      summary: Reveal multiple aliases
      description: |
        Given a list of aliases, retrieves all associated values stored in the
        vault.

        **NOTE:** This endpoint may expose sensitive data. Therefore, it is
        disabled by default. To enable it, please contact your VGS account
        manager or drop us a line at
        [support@verygoodsecurity.com](mailto:support@verygoodsecurity.com).
      parameters:
        - name: q
          in: query
          required: true
          description: Comma-separated list of aliases to reveal.
          example:
            - tok_sandbox_5UpnbMvaihRuRwz5QXwBFw
            - tok_sandbox_9ToiJHedw1nE1Jfx1qYYgz
          schema:
            type: array
            items:
              type: string
            minItems: 1
            maxItems: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties:
                      x-additionalPropertiesName: alias
                      $ref: '#/components/schemas/RevealedData'
                    example:
                      tok_sandbox_5UpnbMvaihRuRwz5QXwBFw:
                        value: "476673481"
                        classifiers:
                          - bank-account
                        aliases:
                          - value: tok_sandbox_5UpnbMvaihRuRwz5QXwBFw
                            format: UUID
                        created_at: "2019-08-10T11:45:30Z"
                      tok_sandbox_9ToiJHedw1nE1Jfx1qYYgz:
                        value: "750360025"
                        classifiers:
                          - bank-account
                        aliases:
                          - value: tok_sandbox_9ToiJHedw1nE1Jfx1qYYgz
                            format: UUID
                        created_at: "2019-08-10T11:45:30Z"
        default:
          $ref: '#/components/responses/ApiErrorsResponse'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl https://api.sandbox.verygoodvault.com/aliases?q={{alias1}},{{alias2}} \
             -u "$USERNAME:$PASSWORD"

  /aliases/{alias}:
    parameters:
      - $ref: '#/components/parameters/alias'
    get:
      operationId: revealAlias
      tags:
        - aliases
      summary: Reveal single alias
      description: |
        Retrieves a stored value along with its aliases.

        **NOTE:** This endpoint may expose sensitive data. Therefore, it is
        disabled by default. To enable it, please contact your VGS account
        manager or drop us a line at
        [support@verygoodsecurity.com](mailto:support@verygoodsecurity.com).
      parameters:
        - $ref: '#/components/parameters/alias'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RevealedData'
                    description: The retrieved value.
                    minItems: 1
                    maxItems: 1
        default:
          $ref: '#/components/responses/ApiErrorsResponse'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl https://api.sandbox.verygoodvault.com/aliases/{{alias}} \
             -u "$USERNAME:$PASSWORD"
    put:
      operationId: updateAlias
      tags:
        - aliases
      summary: Update data classifiers
      description: |
        Apply new classifiers to the value that the specified alias is
        associated with.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAliasRequest'
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/ApiErrorsResponse'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl https://api.sandbox.verygoodvault.com/aliases/{{alias}} \
             -X PUT \
             -u "$USERNAME:$PASSWORD" \
             -H 'Content-Type: application/json' \
             -d '{
                "data": {
                  "classifiers": [
                    "credit-cards", "PII"
                  ]
                }
              }'
    delete:
      operationId: deleteAlias
      tags:
        - aliases
      summary: Delete alias
      description: |
        Removes a single alias.
      parameters:
        - $ref: '#/components/parameters/alias'
      responses:
        '204':
          description: No Content
        default:
          $ref: '#/components/responses/ApiErrorsResponse'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl https://api.sandbox.verygoodvault.com/aliases/{{alias}} \
             -X DELETE \
             -u "$USERNAME:$PASSWORD"


components:

  # See the following links for details:
  # - https://swagger.io/docs/specification/authentication/basic-authentication/
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: The default authentication schema.

  parameters:
    alias:
      name: alias
      in: path
      required: true
      description: Alias to operate on.
      schema:
        type: string
        example: tok_sandbox_bhtsCwFUzoJMw9rWUfEV5e

  responses:
    ApiErrorsResponse:
      description: Something went wrong
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ApiError'
                description: List of errors that occurred while processing the request.
                minItems: 1

  schemas:
    ApiError:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code.
        title:
          type: string
          description: High-level reason of why the request failed.
        detail:
          type: string
          description: Explanation of what exactly went wrong.
        href:
          type: string
          description: Request URL.

    RevealedData:
      type: "object"
      properties:
        value:
          type: "string"
          description: Decrypted value stored in the vault.
          example: 122105155
        classifiers:
          type: "array"
          items:
            type: "string"
            example: bank-account
          description: List of tags the value is classified with.
        aliases:
          type: "array"
          items:
            $ref: '#/components/schemas/Alias'
          description: List of aliases associated with the value.
        created_at:
          type: "string"
          format: "date-time"
          description: Creation time, in UTC.
          example: "2019-05-15T12:30:45Z"

    Alias:
      type: "object"
      properties:
        alias:
          type: "string"
          example: tok_sandbox_bhtsCwFUzoJMw9rWUfEV5e
          description: Opaque string used to substitute the raw value.
        format:
          $ref: '#/components/schemas/AliasFormat'
    AliasFormat:
      type: string
      enum:
        - FPE_ACC_NUM_T_FOUR
        - FPE_ALPHANUMERIC_ACC_NUM_T_FOUR
        - FPE_SIX_T_FOUR
        - FPE_SSN_T_FOUR
        - FPE_T_FOUR
        - NUM_LENGTH_PRESERVING
        - PFPT
        - RAW_UUID
        - UUID
      description: |
        Format of the generated alias string.

        See [Alias Formats](#section/Introduction/Alias-Formats) for details.
      example: UUID

    CreateAliasesRequest:
      type: object
      properties:
        data:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  value:
                    type: string
                    description: Raw value to encrypt & store in the vault.
                    example: 122105155
                  classifiers:
                    type: array
                    items:
                      type: string
                      example: bank-account
                    description: List of tags to classify the value with.
                  format:
                    $ref: '#/components/schemas/AliasFormat'
                required:
                  - value
                  - format
              - type: object
                properties:
                  alias:
                    type: string
                    description: Existing alias to use as a reference.
                    example: tok_sandbox_bhtsCwFUzoJMw9rWUfEV5e
                  format:
                    $ref: '#/components/schemas/AliasFormat'
                required:
                  - alias
                  - format
          minItems: 1
          maxItems: 20
      required:
        - data

    UpdateAliasRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            classifiers:
              type: array
              items:
                type: string
                example: bank-account
              description: List of tags to classify the value with.
          required:
            - classifiers
      required:
        - data
